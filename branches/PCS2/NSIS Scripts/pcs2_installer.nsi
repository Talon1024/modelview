; Script generated by the HM NIS Edit Script Wizard.

; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "POF Constructor Suite"
!define PRODUCT_VERSION "2.0"
!define PRODUCT_PUBLISHER "Kazan & Bobboau"
!define PRODUCT_WEB_SITE "http://alliance.sourceforge.net"
!define PRODUCT_DIR_REGKEY "Software\Microsoft\Windows\CurrentVersion\App Paths\pcs2.exe"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"
!define PRODUCT_STARTMENU_REGVAL "NSIS:StartMenuDir"

SetCompressor bzip2

; MUI 1.67 compatible ------
!include "MUI.nsh"
!include "registerExtension.nsh"
!include "InstallOptions.nsh"
!include "LogicLib.nsh"

; MUI Settings
!define MUI_ABORTWARNING
!define MUI_ICON "${NSISDIR}\Contrib\Graphics\Icons\modern-install.ico"
!define MUI_UNICON "${NSISDIR}\Contrib\Graphics\Icons\modern-uninstall.ico"

; Welcome page
!insertmacro MUI_PAGE_WELCOME
; Directory page
!insertmacro MUI_PAGE_DIRECTORY
; FreeSpace 2 Directory Page
Page Custom FS2Dir_Screen_Enter FS2Dir_Screen_Leave
; MOD directories page
Page Custom MODDirs_Screen_Enter MODDirs_Screen_Leave
; Start menu page
var ICONS_GROUP
!define MUI_STARTMENUPAGE_NODISABLE
!define MUI_STARTMENUPAGE_DEFAULTFOLDER "POF Constructor Suite 2.0"
!define MUI_STARTMENUPAGE_REGISTRY_ROOT "${PRODUCT_UNINST_ROOT_KEY}"
!define MUI_STARTMENUPAGE_REGISTRY_KEY "${PRODUCT_UNINST_KEY}"
!define MUI_STARTMENUPAGE_REGISTRY_VALUENAME "${PRODUCT_STARTMENU_REGVAL}"
!insertmacro MUI_PAGE_STARTMENU Application $ICONS_GROUP
; Instfiles page
!insertmacro MUI_PAGE_INSTFILES
; Finish page
!define MUI_FINISHPAGE_RUN "$INSTDIR\pcs2.exe"
!define MUI_FINISHPAGE_SHOWREADME "$INSTDIR\pcs2_readme.txt"
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "English"

; Reserve files
ReserveFile "fs2dir_screen.ini"
ReserveFile "moddirs_screen.ini"
!insertmacro MUI_RESERVEFILE_INSTALLOPTIONS

; MUI end ------

var freespace2_dir
var moddirs
var numdirs
var skipini

Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
OutFile "PCS2 Setup.exe"
InstallDir "$PROGRAMFILES\POFCS2"
InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY}" ""
ShowInstDetails show
ShowUnInstDetails show

; ----------------------- Explode function from http://nsis.sourceforge.net/Explode ----------------
!define Explode "!insertmacro Explode"

!macro  Explode Length  Separator   String
    Push    `${Separator}`
    Push    `${String}`
    Call    Explode
    Pop     `${Length}`
!macroend

Function Explode
  ; Initialize variables
  Var /GLOBAL explString
  Var /GLOBAL explSeparator
  Var /GLOBAL explStrLen
  Var /GLOBAL explSepLen
  Var /GLOBAL explOffset
  Var /GLOBAL explTmp
  Var /GLOBAL explTmp2
  Var /GLOBAL explTmp3
  Var /GLOBAL explArrCount

  ; Get input from user
  Pop $explString
  Pop $explSeparator

  ; Calculates initial values
  StrLen $explStrLen $explString
  StrLen $explSepLen $explSeparator
  StrCpy $explArrCount 1

  ${If}   $explStrLen <= 1          ;   If we got a single character
  ${OrIf} $explSepLen > $explStrLen ;   or separator is larger than the string,
    Push    $explString             ;   then we return initial string with no change
    Push    1                       ;   and set array's length to 1
    Return
  ${EndIf}

  ; Set offset to the last symbol of the string
  StrCpy $explOffset $explStrLen
  IntOp  $explOffset $explOffset - 1

  ; Clear temp string to exclude the possibility of appearance of occasional data
  StrCpy $explTmp   ""
  StrCpy $explTmp2  ""
  StrCpy $explTmp3  ""

  ; Loop until the offset becomes negative
  ${Do}
    ;   If offset becomes negative, it is time to leave the function
    ${IfThen} $explOffset == -1 ${|} ${ExitDo} ${|}

    ;   Remove everything before and after the searched part ("TempStr")
    StrCpy $explTmp $explString $explSepLen $explOffset

    ${If} $explTmp == $explSeparator
        ;   Calculating offset to start copy from
        IntOp   $explTmp2 $explOffset + $explSepLen ;   Offset equals to the current offset plus length of separator
        StrCpy  $explTmp3 $explString "" $explTmp2

        Push    $explTmp3                           ;   Throwing array item to the stack
        IntOp   $explArrCount $explArrCount + 1     ;   Increasing array's counter

        StrCpy  $explString $explString $explOffset 0   ;   Cutting all characters beginning with the separator entry
        StrLen  $explStrLen $explString
    ${EndIf}

    ${If} $explOffset = 0                       ;   If the beginning of the line met and there is no separator,
                                                ;   copying the rest of the string
        ${If} $explSeparator == ""              ;   Fix for the empty separator
            IntOp   $explArrCount   $explArrCount - 1
        ${Else}
            Push    $explString
        ${EndIf}
    ${EndIf}

    IntOp   $explOffset $explOffset - 1
  ${Loop}

  Push $explArrCount
FunctionEnd

; This script is derived of a script Written by dirtydingus :
; "Another String Replace (and Slash/BackSlash Converter)"
;
; for more information please see :
; http://nsis.sourceforge.net/Another_String_Replace_(and_Slash/BackSlash_Converter)

Var MODIFIED_STR

!macro ReplaceSubStr OLD_STR SUB_STR REPLACEMENT_STR

	Push "${OLD_STR}" ;String to do replacement in (haystack)
	Push "${SUB_STR}" ;String to replace (needle)
	Push "${REPLACEMENT_STR}" ; Replacement
	Call StrRep
	Pop $R0 ;result
	StrCpy $MODIFIED_STR $R0

!macroend

;----------- StrRep From http://nsis.sourceforge.net/Replace_Sub_String_(macro) ---------------------------
Function StrRep

  ;Written by dirtydingus 2003-02-20 04:30:09
  ; USAGE
  ;Push String to do replacement in (haystack)
  ;Push String to replace (needle)
  ;Push Replacement
  ;Call StrRep
  ;Pop $R0 result

  Exch $R4 ; $R4 = Replacement String
  Exch
  Exch $R3 ; $R3 = String to replace (needle)
  Exch 2
  Exch $R1 ; $R1 = String to do replacement in (haystack)
  Push $R2 ; Replaced haystack
  Push $R5 ; Len (needle)
  Push $R6 ; len (haystack)
  Push $R7 ; Scratch reg
  StrCpy $R2 ""
  StrLen $R5 $R3
  StrLen $R6 $R1
loop:
  StrCpy $R7 $R1 $R5
  StrCmp $R7 $R3 found
  StrCpy $R7 $R1 1 ; - optimization can be removed if U know len needle=1
  StrCpy $R2 "$R2$R7"
  StrCpy $R1 $R1 $R6 1
  StrCmp $R1 "" done loop
found:
  StrCpy $R2 "$R2$R4"
  StrCpy $R1 $R1 $R6 $R5
  StrCmp $R1 "" done loop
done:
  StrCpy $R3 $R2
  Pop $R7
  Pop $R6
  Pop $R5
  Pop $R2
  Pop $R1
  Pop $R4
  Exch $R3

FunctionEnd
;------------------------------------------------------------------------------------------------------

Section "MainSection" SEC01
  SetOutPath "$INSTDIR"
  SetOverwrite ifnewer
  File "..\zlib1.dll"
  File "..\libpng13.dll"
  File "..\ILUT.dll"
  File "..\ILU.dll"
  File "..\DevIL.dll"
  File "..\wxbase28d_vc_custom.dll"
  File "..\wxmsw28d_core_vc_custom.dll"
  File "..\wxmsw28d_gl_vc_custom.dll"
  File "pcs2_readme.txt"
  File "..\Release\pcs2.exe"
  File "..\pcs2.ico"
  SetOutPath "$INSTDIR\textures"
  File "textures\invisible.tga"
  SetOutPath "$INSTDIR\temp"
  SetOutPath "$INSTDIR"
; Shortcuts
  !insertmacro MUI_STARTMENU_WRITE_BEGIN Application
  CreateDirectory "$SMPROGRAMS\$ICONS_GROUP"
  CreateShortCut "$SMPROGRAMS\$ICONS_GROUP\POF Constructor Suite.lnk" "$INSTDIR\pcs2.exe"
  CreateShortCut "$DESKTOP\POF Constructor Suite.lnk" "$INSTDIR\pcs2.exe"
  !insertmacro MUI_STARTMENU_WRITE_END
  
; File Type Associations
  ${registerExtension} "$INSTDIR\pcs2.exe" ".pof" "FreeSpace 2 Parallax Object File"
  ${registerExtension} "$INSTDIR\pcs2.exe" ".pmf" "POF Constructor Suite 2.0 Model File"
  
; Write INI
    IntCmp $skipini 0 writeini inidone inidone
    writeini:
   ${Explode} $numdirs "|" $moddirs
   !insertmacro ReplaceSubStr $INSTDIR "\" "\\"
   StrCpy $9 $MODIFIED_STR
   !insertmacro ReplaceSubStr $freespace2_dir "\" "\\"
   StrCpy $8 $MODIFIED_STR
   
   FileOpen $3 "$9\pcs2.ini" w
   FileWrite $3 "[tpaths]$\r$\n"
   FileWrite $3 "path0=.\\$\r$\n"
   FileWrite $3 "path1=$9\\textures\\$\r$\n"
   FileWrite $3 "path2=$8\\$\r$\n"
   ${For} $1 1 $numdirs
       Pop $2
       IntOp $4 $1 + 2
       FileWrite $3 "path$4=$8\\$2\\$\r$\n"
    ${Next}
    FileWrite $3 "temp_path=$9\\temp\\$\r$\n"
    IntOp $4 $numdirs + 3
    FileWrite $3 "numpaths=$4$\r$\n"
    FileWrite $3 "[convoptions]$\r$\n"
    FileWrite $3 "cobscale=20.00$\r$\n"
    FileClose $3
    inidone:
SectionEnd


Function .onInit
  !insertmacro MUI_INSTALLOPTIONS_EXTRACT "fs2dir_screen.ini"
  !insertmacro MUI_INSTALLOPTIONS_EXTRACT "moddirs_screen.ini"
FunctionEnd

Function FS2Dir_Screen_Enter
  # If you need to skip the page depending on a condition, call Abort.
  !insertmacro MUI_INSTALLOPTIONS_DISPLAY "fs2dir_screen.ini"
FunctionEnd

Function FS2Dir_Screen_Leave
  # Form validation here. Call Abort to go back to the page.
  # Use !insertmacro MUI_INSTALLOPTIONS_READ $Var "InstallOptionsFile.ini" ...
  # to get values.
   !insertmacro MUI_INSTALLOPTIONS_READ $freespace2_dir "fs2dir_screen.ini" "Field 2" "State"
   !insertmacro MUI_INSTALLOPTIONS_READ $skipini "fs2dir_screen.ini" "Field 4" "State"
FunctionEnd

Function MODDirs_Screen_Enter
  # If you need to skip the page depending on a condition, call Abort.
  IntCmp $skipini 1 abmods abcont abcont
  abmods:
   Abort
  abcont:

;FileOpen $9 apachesrvin.bat w ;Opens a Empty File an fills it
;FileWrite $9 "cd $INSTDIR\apache$\r$\n"
;FileWrite $9 "apache -n Apache -k install$\r$\n"
;FileWrite $9 "net start Apache$\r$\n"
;FileWrite $9 "exit$\r$\n"
;FileClose $9 ;Closes the filled file
   ; get dir listing and setup the next page
  ;FileOpen $3 "c:\nsis_debug.txt" w
  FindFirst $2 $1 "$freespace2_dir\*.*"
  StrCpy $9 ""
  StrCmp $2 "" error
  IfFileExists "$freespace2_dir\$1\*.*" append readnext
  ;FileWrite $3 "$1$\r$\n"
  again:
  StrCmp $1 "" done
  ;FileWrite $3 "$1$\r$\n"
  IfFileExists "$freespace2_dir\$1\*.*" append readnext
  append:
  StrCmp $1 "." readnext
  StrCmp $1 ".." readnext
  StrCmp $1 "data" readnext
  StrCmp $1 "ereg" readnext
  StrCmp $1 "mindspring" readnext
  StrCmp $1 "screenshots" readnext
  ;FileWrite $3 "Adding: $1$\r$\n"
  StrCpy $9 "$9|$1"
  readnext:
  FindNext $2 $1
  Goto again
  done:
  FindClose $2
  ;FileClose $3
  ; now write to the ini file
  !insertmacro MUI_INSTALLOPTIONS_WRITE "moddirs_screen.ini" "Field 2" "ListItems" $9
  DetailPrint $9
  goto finished
  error:
  ; hmmm
  finished:
  
  !insertmacro MUI_INSTALLOPTIONS_DISPLAY "moddirs_screen.ini"
FunctionEnd


Function MODDirs_Screen_Leave
  # Form validation here. Call Abort to go back to the page.
  # Use !insertmacro MUI_INSTALLOPTIONS_READ $Var "InstallOptionsFile.ini" ...
  # to get values.
   !insertmacro MUI_INSTALLOPTIONS_READ $moddirs "moddirs_screen.ini" "Field 2" "State"
   ;FileOpen $3 "c:\nsis_debug.txt" w
   ;FileWrite $3 "$moddirs\r$\n"
   ;FileClose $3
FunctionEnd


Section -AdditionalIcons
  !insertmacro MUI_STARTMENU_WRITE_BEGIN Application
  CreateShortCut "$SMPROGRAMS\$ICONS_GROUP\Uninstall.lnk" "$INSTDIR\uninst.exe"
  !insertmacro MUI_STARTMENU_WRITE_END
SectionEnd

Section -Post
  WriteUninstaller "$INSTDIR\uninst.exe"
  WriteRegStr HKLM "${PRODUCT_DIR_REGKEY}" "" "$INSTDIR\pcs2.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "$INSTDIR\pcs2.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"
SectionEnd


Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "$(^Name) was successfully removed from your computer."
FunctionEnd

Function un.onInit
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "Are you sure you want to completely remove $(^Name) and all of its components?" IDYES +2
  Abort
FunctionEnd

Section Uninstall
  !insertmacro MUI_STARTMENU_GETFOLDER "Application" $ICONS_GROUP
  Delete "$INSTDIR\uninst.exe"
  Delete "$INSTDIR\pcs2_readme.txt"
  Delete "$INSTDIR\DevIL.dll"
  Delete "$INSTDIR\ILU.dll"
  Delete "$INSTDIR\ILUT.dll"
  Delete "$INSTDIR\libpng13.dll"
  Delete "$INSTDIR\zlib1.dll"
  Delete "$INSTDIR\textures\invisible.tga"
  Delete "$INSTDIR\pcs2.exe"
  Delete "$INSTDIR\pcs2.ini"

  ; File Type Associations
  ${unregisterExtension} ".pof" "FreeSpace 2 Parallax Object File"
  ${unregisterExtension} ".pmf" "POF Constructor Suite 2.0 Model File"

  Delete "$SMPROGRAMS\$ICONS_GROUP\Uninstall.lnk"
  Delete "$DESKTOP\POF Constructor Suite.lnk"
  Delete "$SMPROGRAMS\$ICONS_GROUP\POF Constructor Suite.lnk"

  RMDir "$SMPROGRAMS\$ICONS_GROUP"
  RMDir /r "$INSTDIR\temp"
  RMDir /r "$INSTDIR\textures"
  RMDir /r "$INSTDIR"
  
  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  DeleteRegKey HKLM "${PRODUCT_DIR_REGKEY}"
  SetAutoClose true
SectionEnd

